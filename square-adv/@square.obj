@Square-Advanced
--track0:Xサイズ,-4000,4000,100
--track1:Yサイズ,-4000,4000,100
--track2:破線の位相,-1000,1000,0

--dialog:色/col,color="0xfffffff";左右寄せ[0-2],alignSideMode=1;上下寄せ[0-2],alignUpMode=1;破線の角度,spaceDeg=0;縦破線/chk,spaceVertical=0;破線のサイズ,spaceSize=0;破線の間隔,space=0;

--------------------------------------------------------------
-- 変数
--------------------------------------------------------------
local sizeX = obj.track0
local sizeY = obj.track1
local spaceMove = obj.track2
local flagOpposX = 0
local flagOpposY = 0
local width = sizeX / 2
local height = sizeY / 2
local alignSide = 0
local alignUp = 0

if alignUpMode==nil then
	alignUpMode = 1
end
if alignSideMode==nil then
	alignSideMode = 1
end
if spaceSize==nil then
	spaceSize = 0
end
if space==nil then
	space = 0
end

if color == nil then
	color="0xfffffff"
end

if sizeX < 0 then
	sizeX=(-sizeX)
	flagOpposX = 1
end
if sizeY < 0 then
	sizeY=(-sizeY)
	flagOpposY = 1
end
--------------------------------------------------------------
-- 初期設定
--------------------------------------------------------------
if (sizeX * sizeY)==0 then
	return
else
	obj.setoption("drawtarget", "tempbuffer", sizeX, sizeY)
	obj.load("figure", "四角形", color)
end

--------------------------------------------------------------
-- 寄せ
--------------------------------------------------------------
local temp = width
if flagOpposX == 1 then
	temp = temp * -1
end

if alignSideMode==0 then
	alignSide = temp
elseif alignSideMode==2 then
	alignSide = -temp
end
--------------------------------------------------------------
local temp = height
if flagOpposY == 1 then
	temp = -temp
end

if alignUpMode==0 then
	alignUp = -temp
elseif alignUpMode==2 then
	alignUp = temp
end

--------------------------------------------------------------
-- 描画
--------------------------------------------------------------
local s = alignSide
local u = alignUp

if (spaceSize * space) == 0 then --Line
	obj.drawpoly(-width,-height,0,width,-height,0,width,height,0,-width,height,0)


else
	if spaceDeg < 0 then
		spaceDeg = -spaceDeg + 90
	end
	if spaceDeg >= 360 then
		spaceDeg = spaceDeg - ( 360 * math.floor(spaceDeg / 360) )
	end
	if (spaceDeg > 180 and spaceDeg < 360) then
		spaceDeg = spaceDeg - 180
	end

	if spaceVertical == 0 then
		if (spaceDeg == 0) or (spaceDeg == 180) then
			local i = - (spaceSize + space) + (spaceMove % (spaceSize + space)) - width
			while i <= width do
				local ax = i
				local bx = ax + spaceSize

				obj.drawpoly(ax,-height,0,bx,-height,0,bx,height,0,ax,height, 0)

				i = ax + spaceSize + space
			end

		elseif (spaceDeg > 0) and (spaceDeg < 90) then
			local adjustPos = (height * 2) / math.tan( math.rad(90 - spaceDeg) )
			local i	= - (spaceSize + space) + (spaceMove % (spaceSize + space)) - width
			i	= i - (math.floor(adjustPos / spaceSize + space) + 1) *(spaceSize + space)
			while i <= width do
				local ax = i
				local bx = ax + spaceSize

				obj.drawpoly(ax + adjustPos,-height,0  ,bx + adjustPos,-height,0,  bx,height,0  ,ax,height, 0)

				i = ax + spaceSize + space
			end

		elseif (spaceDeg > 90) and (spaceDeg < 180) then
			local adjustPos = (height * 2) / math.tan( math.rad(90 - spaceDeg) )
			local i	= - (spaceSize + space) + (spaceMove % (spaceSize + space)) - width
			while i <= width - adjustPos do
				local ax = i
				local bx = ax + spaceSize

				obj.drawpoly(ax + adjustPos,-height,0  ,bx + adjustPos,-height,0,  bx,height,0  ,ax,height, 0)

				i = ax + spaceSize + space
			end

		elseif (spaceDeg == 90) or (spaceDeg == 270) then
			local i	= - (spaceSize + space) + (spaceMove % (spaceSize + space)) - height
			while i <= height do
				local ay = i
				local by = ay + spaceSize

				obj.drawpoly(-width,ay,0,width,ay,0,width,by,0,-width,by, 0)

				i = ay + spaceSize + space
			end
		end


	elseif spaceVertical==1 then
		if (spaceDeg == 0) or (spaceDeg == 180) then
			local i	= - (spaceSize + space) + (spaceMove % (spaceSize + space)) - height
			while i <= height do
				local ay = i
				local by = ay + spaceSize

				obj.drawpoly(-width,ay,0,width,ay,0,width,by,0,-width,by, 0)

				i = ay + spaceSize + space
			end

		elseif (spaceDeg > 0) and (spaceDeg < 90) then
			local adjustPos = (width * 2) / math.tan( math.rad(90 - spaceDeg) )
			local i	= - (spaceSize + space) + (spaceMove % (spaceSize + space)) - height
			i	= i - (math.floor(adjustPos / spaceSize + space) + 1) *(spaceSize + space)
			while i <= height do
				local ay = i
				local by = ay + spaceSize

				obj.drawpoly(-width,ay,0,width,ay + adjustPos,0,width,by + adjustPos,0,-width,by, 0)

				i = ay + spaceSize + space
			end

		elseif (spaceDeg > 90) and (spaceDeg < 180) then
			local adjustPos = (width * 2) / math.tan( math.rad(90 - spaceDeg) )
			local i	= - (spaceSize + space) + (spaceMove % (spaceSize + space)) - height
			while i <= height - adjustPos do
				local ay = i
				local by = ay + spaceSize

				obj.drawpoly(-width,ay,0,width,ay + adjustPos,0,width,by + adjustPos,0,-width,by, 0)

				i = ay + spaceSize + space
			end

		elseif (spaceDeg == 90) or (spaceDeg == 270) then
			local i = - (spaceSize + space) + (spaceMove % (spaceSize + space)) - width
			while i <= width do
				local ax = i
				local bx = ax + spaceSize

				obj.drawpoly(ax,-height,0,bx,-height,0,bx,height,0,ax,height, 0)

				i = ax + spaceSize + space
			end
		end
	end
end

obj.load("tempbuffer")
obj.ox = obj.ox + s
obj.oy = obj.oy + u
